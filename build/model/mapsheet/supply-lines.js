import{joinIterables}from"../../utils.js";import{Hex}from"../mapsheet.js";import{Partnership}from"../partnership.js";import{Countries}from"../countries.js";import{SupplyUnit}from"../units.js";var SupplyLines;!function(e){let n=new Map;function t(e,t,r,s=!1,i=!0,a=1/0){const o=i&&!s;let l=e,p=Hex.allHexes.filter(t);if(i||Countries.turkey.partnership()!==Partnership.Neutral||(p=p.filter((n=>n.isBlackSea()===e.isBlackSea()))),0===p.length)return null;let u=new Map,c=[l],h=new Map;const f=n.get(t)??new Map;n.set(t,f);const d=f.get(r)??new Map;f.set(r,d);const m=performance.now();for(;void 0!==l;){if(performance.now()-m>3e3)return console.warn("Timeout calculating pathBetweenHexes."),null;if(t(l)){for(let[e,n]of c.entries())d.set(n,c.slice(e));for(let[e,n]of h)d.set(e,[...n.toReversed(),...c.slice(1)]);return c}const f=n.get(t)?.get(r)?.get(e);if(o&&void 0!==f)return f;const C=u.get(l)??(s?i?l.adjacentHexes():l.adjacentSeaHexes():i?l.adjacentLandHexes():[]).filter((n=>!c.includes(n)&&!h.has(n)&&n.controller()?.partnership()!==Partnership.Neutral&&(r(n)||t(n))&&n.distanceFromHex(e)<=a));u.set(l,C),0===C.length?(h.set(l,[...c]),c.pop(),c.length>0&&u.set(c.at(-1),u.get(c.at(-1)).filter((e=>e!==l))),l=c.at(-1)):(p.sort(((e,n)=>e.distanceFromHex(l)-n.distanceFromHex(l))),l=p[0].closestHex(C),c.push(l))}for(let e of joinIterables(c,h.keys()))d.set(e,null);return null}function r(e){return null===e||e.hasBeenConquered()?Countries.all().filter((n=>n.partnership()===e.partnership())):e.partnership()===Partnership.Allies&&e!==Countries.sovietUnion&&e!==Countries.china?Countries.all().filter((e=>e.partnership()===Partnership.Allies&&e!==Countries.sovietUnion&&e!==Countries.china)):e===Countries.japan||e===Countries.thailand?[Countries.japan,Countries.thailand]:e.partnership()===Partnership.Axis&&e!==Countries.sovietUnion?Countries.all().filter((e=>e.partnership()===Partnership.Axis&&e!==Countries.japan&&e!==Countries.thailand&&e!==Countries.sovietUnion)):[e]}e.clearCache=function(){n=new Map},e.pathBetweenHexes=t,e.supplySourcesUseableBy=r;const s=new Map([!0,!1].map((e=>[e,new Map(Countries.all().map((n=>[n,t=>e&&t.units().some((e=>e instanceof SupplyUnit&&r(n).includes(e.owner)))||(t.isResourceHex||n===Countries.china)&&null!==t.city&&null!==t.country&&t.controller()?.partnership()===n.partnership()&&r(n).includes(t.country)])))]))),i=new Map([Partnership.Allies,Partnership.Axis].map((e=>[e,n=>n.controller()?.partnership()===e&&(n.landUnits().some((n=>n.owner.partnership()===e))||!n.isInLandControlZone(e.opponent()))&&!n.isDesert()&&!n.isTallMountain()])));e.canTraceSupplyLine=function(e,n,r=!0){const a=e.controller();if(null===a)return!1;const o=a.partnership();return o!==Partnership.Neutral&&n?.partnership()!==Partnership.Neutral&&null!==t(e,s.get(r).get(n),i.get(o))},e.simplifiedPathBetweenHexes=function(e,n,r,s=!1,i=!0,a=1/0){const o=t(e,n,r,s,i,a);if(null===o)return null;let l=[o[0]];for(;l.at(-1)!==o.at(-1);){const e=l.at(-1),n=s?i?e.adjacentHexes():e.adjacentSeaHexes():i?e.adjacentLandHexes():[];l.push(o.findLast((e=>n.includes(e))))}return l}}(SupplyLines||(SupplyLines={}));export default SupplyLines;