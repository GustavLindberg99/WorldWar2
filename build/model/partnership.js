import{Countries}from"./countries.js";import{Convoy}from"./units.js";import{date}from"./date.js";import UnitContainer from"./unit-container.js";export class Partnership extends UnitContainer{static Allies=new Partnership("Allies");static Axis=new Partnership("Axis");static Neutral=null;name;constructor(t){super(),this.name=t}units(){return Countries.all().values().filter((t=>t.partnership()===this)).flatMap((t=>t.units()))}convoys(t=null){return this.units().filter((t=>t instanceof Convoy)).filter((e=>e.inPort&&0===e.money&&!e.hex().isColony&&(null===t||e.hex().country===t)))}countries(){return Countries.all().filter((t=>t.partnership()===this))}currentDelayedUnits(){return Countries.all().filter((t=>t.partnership()===this&&!t.conquered())).flatMap((t=>[...t.delayedUnits.get(date.current)??new Set]))}opponent(){return this===Partnership.Allies?Partnership.Axis:Partnership.Allies}availableUnits(){return this.countries().values().flatMap((t=>t.availableUnits))}}