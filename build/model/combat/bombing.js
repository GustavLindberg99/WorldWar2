export default class Bombing{attackers;combatHex;constructor(t){this.attackers=t,this.combatHex=t[0].hex()}modifiedAttackStrength(){return this.attackers.reduce(((t,e)=>t+e.bomberStrength/(e.damaged()?2:1)),0)}unmodifiedAttackStrength(){return this.attackers.reduce(((t,e)=>t+e.bomberStrength),0)}successProbability(){return 1-2**(-this.modifiedAttackStrength()/5)}attackerDamageProbability(){return.2}inflictDamages(){let t={success:Math.random()<this.successProbability(),damagedUnits:new Set};if(t.success&&this.damageOnSuccess(),Math.random()<this.attackerDamageProbability()){const e=this.attackers[Math.floor(Math.random()*this.attackers.length)];e.damage(),t.damagedUnits=new Set([e])}return t}}