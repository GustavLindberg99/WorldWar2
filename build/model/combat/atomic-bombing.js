import Bombing from"./bombing.js";import{Countries}from"../countries.js";import{AirUnit,LandUnit,NavalUnit}from"../units.js";export default class AtomicBombing extends Bombing{successProbability(){return 1}attackerDamageProbability(){return 0}surrenderProbability(){if(this.combatHex.isColony)return 0;let t;switch(this.combatHex.country){case Countries.japan:case Countries.china:t=.5;case Countries.italy:case Countries.france:t=2;default:t=1}return 1-2**(-t*(this.combatHex.country.cities.some((t=>!t.isColony&&t.controller()!==this.combatHex.country))?2:1)*(this.combatHex.country.atomicBombCount+1))}inflictDamages(){const t=this.#t();return{...super.inflictDamages(),eliminatedUnits:t}}damageOnSuccess(){this.combatHex.destroyedByAtomicBomb=!0;for(let t of this.attackers)t.owner.hasUsedAtomicBombThisTurn=!0;for(let t of this.#t())t.delete();this.combatHex.isColony||(Math.random()<this.surrenderProbability()&&(this.combatHex.country.surrenderedFromAtomicBomb=this.attackers[0].owner),this.combatHex.country.atomicBombCount++)}#t(){return new Set(this.combatHex.units().filter((t=>t instanceof LandUnit||t instanceof AirUnit&&t.based||t instanceof NavalUnit&&t.inPort)))}}