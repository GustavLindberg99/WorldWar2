import UnitCombat from"./unit-combat.js";import{AirUnit,NavalUnit,Submarine}from"../units.js";export default class AirNavalCombat extends UnitCombat{attackers;defenders;combatHex;kamikaze=!1;constructor(e,t){super(),this.attackers=e,this.defenders=t,this.combatHex=t[0].hex()}modifiedAttackStrength(){return this.attackers.reduce(((e,t)=>e+this.#e(t,this.defenders[0])/(t.damaged()?2:1)),0)}modifiedDefenseStrength(){return this.defenders.reduce(((e,t)=>e+t.defense/(t.damaged()?2:1)),0)}unmodifiedAttackStrength(){return this.attackers.reduce(((e,t)=>e+this.#e(t,this.defenders[0])),0)}unmodifiedDefenseStrength(){return this.defenders.reduce(((e,t)=>e+t.defense),0)}modifiedCounterAttackStrength(){return this.defenders.reduce(((e,t)=>e+this.#e(t,this.attackers[0])/(t.damaged()?2:1)),0)}modifiedCounterDefenseStrength(){return this.attackers.reduce(((e,t)=>e+t.defense/(t.damaged()?2:1)),0)}unmodifiedCounterAttackStrength(){return this.defenders.reduce(((e,t)=>e+this.#e(t,this.attackers[0])),0)}unmodifiedCounterDefenseStrength(){return this.attackers.reduce(((e,t)=>e+t.defense),0)}defenderCancelOrRetreatProbability(){return 1-2**-(this.modifiedAttackStrength()/this.modifiedDefenseStrength())}damageProbability(e){return this.kamikaze&&this.attackers.includes(e)?0:this.#t(this.attackers.includes(e)?this.modifiedCounterAttackStrength():this.modifiedAttackStrength(),e.defense,this.attackers.includes(e)?this.attackers.length:this.defenders.length,.5)}eliminationProbability(e){return this.kamikaze&&this.attackers.includes(e)?1:this.#t(this.attackers.includes(e)?this.modifiedCounterAttackStrength():this.modifiedAttackStrength(),e.defense,this.attackers.includes(e)?this.attackers.length:this.defenders.length,.05)}inflictDamages(){const e=this.retreatableHexes();let t=new Set;for(let e of[...this.attackers,...this.defenders])Math.random()<this.damageProbability(e)&&(e.damage(),t.add(e)),Math.random()<this.eliminationProbability(e)&&(e.die(),t.add(e));const i={damagedUnits:new Set(t.values().filter((e=>e.isAlive()))),eliminatedUnits:new Set(t.values().filter((e=>!e.isAlive())))},n=Math.random()<this.defenderCancelOrRetreatProbability();if(this.attackers.some((e=>e instanceof NavalUnit))){const t=n?e[Math.floor(Math.random()*e.length)]:void 0;for(let[e,i]of t??[])e.isAlive()&&e.setHex(i)}else i.success=n||this.defenders.every((e=>!e.isAlive()));return i}#e(e,t){return t instanceof AirUnit?e instanceof AirUnit?e.fighterStrength:0:e instanceof AirUnit?this.kamikaze&&this.attackers.includes(e)?3*(e.bomberStrength||e.kamikazeBaseStrength):e.bomberStrength:t instanceof Submarine?e.submarineAttack:e.attack}#t(e,t,i,n){return 1-(1/(1-n))**-(e/(t*i))}adjacentHexes(e){return e.adjacentSeaHexes()}relevantUnitsInHex(e){return e.navalUnits()}isInControlZone(e,t){return e.isInNavalControlZone(t,this.defenders[0]instanceof Submarine)}}