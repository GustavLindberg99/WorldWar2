import LandUnit from"../land-unit.js";import{Paratrooper}from"../../units.js";export default class SupplyUnit extends LandUnit{#t=!1;constructor(t,n){super(0,t,n)}type(){return"Land unit (Supply Unit)"}price(){return 0}delay(){return 1}die(){this.delete(),this.owner.availableUnits.add(this)}outOfSupply(){return this.#t}updateSupply(){const t=super.updateSupply();return this.#t=super.outOfSupply(),t}canAttack(t=null){return!1}canEnterHexWithinStackingLimits(t,n=t.units()){const u=[...n.filter((t=>t!==this&&t instanceof LandUnit))];return u.length-(u.some((t=>t instanceof Paratrooper))?1:0)<3}maxStrength(){return 0}clone(){return new SupplyUnit(this.movementAllowance,this.owner)}toJson(){let t=super.toJson();return t.outOfSupply=this.#t||void 0,t}static validateSupplyJson(t){return!("outOfSupply"in t)||"boolean"==typeof t.outOfSupply||(console.warn("Invalid supply unit: invalid outOfSupply."),!1)}static supplyUnitFromJson(t,n){const u=new SupplyUnit(t.movementAllowance,n);return u.#t=t.outOfSupply??!1,u}}