import{Hex,WeatherZone}from"./mapsheet.js";import{Countries,Country}from"./countries.js";import{date,Month}from"./date.js";import{Phase}from"./phase.js";export var SavedGames;!function(e){e.gameToJson=function(e){return{date:date.current,phase:Phase.current,humanPartnership:e.name,groundedAirUnits:Object.keys(WeatherZone).filter((e=>Hex.groundedAirUnits.has(WeatherZone[e]))),hexes:Hex.allHexes.map((e=>e.toJson())).filter((e=>Object.values(e).filter((e=>void 0!==e)).length>2)),countries:Countries.all().map((e=>e.toJson()))}},e.validateJson=function(e){return"object"!=typeof e||null===e?(console.warn("Invalid saved game: invalid type."),!1):!("date"in e)||"number"!=typeof e.date||e.date<date(1937,Month.June)?(console.warn("Invalid saved game: invalid date."),!1):!("phase"in e)||"number"!=typeof e.phase||e.phase<Phase.Deployment||e.phase>Phase.WarDeclaration?(console.warn("Invalid saved game: invalid phase."),!1):"hexes"in e&&e.hexes instanceof Array&&e.hexes.every((e=>Hex.validateJson(e)))?"countries"in e&&e.countries instanceof Array&&e.countries.every((e=>Country.validateJson(e)))?!("groundedAirUnits"in e&&!(e.groundedAirUnits instanceof Array&&e.groundedAirUnits.every((e=>"string"==typeof e&&Object.keys(WeatherZone).includes(e)))))||(console.warn("Invalid saved game: invalid air units."),!1):(console.warn("Invalid saved game: invalid countries."),!1):(console.warn("Invalid saved game: invalid hexes."),!1)},e.loadGameFromJson=function(e){date.current=e.date,Phase.current=e.phase,Hex.groundedAirUnits=new Set(e.groundedAirUnits?.map((e=>WeatherZone[e])));for(let n of e.hexes)Hex.fromCoordinates(n.x,n.y).loadFromJson(n);for(let n of e.countries)Countries.fromName(n.name).loadFromJson(n)}}(SavedGames||(SavedGames={}));