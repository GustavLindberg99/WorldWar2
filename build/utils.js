export async function wait(e){await new Promise((n=>setTimeout(n,e)))}let worker,uiLastRefreshed=performance.now();export async function refreshUI(e=20){if(performance.now()>uiLastRefreshed+e){uiLastRefreshed=performance.now(),worker??=new Worker("data:text/javascript,\n            onmessage = () => {\n                setTimeout(() => postMessage(null), 0);\n            };\n            ");const e=new Promise((e=>worker.addEventListener("message",(()=>e()))));worker.postMessage(null),await e}}export function*joinIterables(...e){for(let n of e)yield*n}export function addToMapOfSets(e,n,t){const r=e.get(n)??new Set;r.add(t),e.set(n,r)}export function unionProbability(e,...n){if(0===n.length)return e;const t=unionProbability(n[0],...n.slice(1));return e+t-e*t}export function xdialogConfirm(e,n){return new Promise((t=>xdialog.confirm(n,(()=>t(!0)),{title:e,oncancel:()=>t(!1)})))}export function sortNumber(e,n,t){return Number(t(e))-Number(t(n))}