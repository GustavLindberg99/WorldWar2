import Player from"./player.js";import{Partnership}from"../../model/partnership.js";import{Countries}from"../../model/countries.js";import{Unit}from"../../model/units.js";import{Phase}from"../../model/phase.js";import LeftPanel from"../../view/left-panel.js";import RunCombat from"../../view/combat/run-combat.js";import UnitMarker from"../../view/markers/unit-marker.js";import HumanAmphibiousParadropPhase from"../human-phases/human-amphibious-paradrop-phase.js";import HumanCombatPhase from"../human-phases/human-combat-phase.js";import HumanDeploymentPhase from"../human-phases/human-deployment-phase.js";import HumanInterceptionPhase from"../human-phases/human-interception-phase.js";import HumanMoneyExchange from"../human-phases/human-money-exchange.js";import HumanMovementPhase from"../human-phases/human-movement-phase.js";import HumanUnitBuildPhase from"../human-phases/human-unit-build-phase.js";export default class HumanPlayer extends Player{async incomePhase(){super.incomePhase();const e=new HumanMoneyExchange(this.partnership);await e.run()}async deploymentPhase(){const e=new HumanDeploymentPhase(this.partnership);await e.run()}async unitBuildPhase(){const e=new HumanUnitBuildPhase(this.partnership);await e.run()}async overrunPhase(){const e=new HumanCombatPhase(this.partnership,!0);await e.run();for(let e of this.partnership.landUnits().filter((e=>e.hasAttacked)))e.hasAttacked=!1,UnitMarker.get(e).update()}async firstMovementPhase(){LeftPanel.clear();const e=new HumanMovementPhase(this.partnership);return await e.run("To interception phase"),e.passedHexes}async interceptionPhase(e,n){n??=[];const t=n.length,a=new HumanInterceptionPhase(this.partnership,e,n);if(await a.run("To opponent's interception"),a.passedHexes.size>0){for(let[n,t]of a.passedHexes)e.set(n,t);await this.opponent().interceptionPhase(e,n),await RunCombat.runInterceptions(n,t,e)}}async amphibiousParadropPhase(){const e=new HumanAmphibiousParadropPhase(this.partnership);await e.run()}async combatPhase(){const e=new HumanCombatPhase(this.partnership,!1);await e.run()}async secondMovementPhase(){LeftPanel.clear();const e=new HumanMovementPhase(this.partnership);let n;n=this.partnership===Partnership.Allies&&Phase.current===Phase.AlliedSecondMovement||this.partnership===Partnership.Axis&&Phase.current===Phase.AxisSecondMovement?"To opponent landing air units":this.partnership===Partnership.Axis?"To supply phase":"To your main phase",await e.run(n)}async warDeclarationPhase(){LeftPanel.clear();const e=Countries.all().filter((e=>e.canBeInvadedBy(this.partnership))),n=Countries.all().filter((e=>e.canBeActivated(this.partnership)));0!==e.length||0!==n.length||Countries.france.canAttemptVichy(this.partnership)||Countries.finland.canSurrender(this.partnership)||LeftPanel.appendParagraph("You can't invade any countries. Click Next to continue.");let t=null;Countries.france.canAttemptVichy(this.partnership)&&(LeftPanel.appendParagraph("Do you want to attempt to create Vichy France? If you do, you have a 75% chance to succeed. If you fail or if you don't want to attempt to create Vichy France, you won't be able to do it again."),t=LeftPanel.appendCheckbox("Attempt to create Vichy France (75% chance of succeeding)"));let a=null;Countries.finland.canSurrender(this.partnership)&&(LeftPanel.appendParagraph("Do you want to attempt to have Finland surrender? If you do, Finland will be considered conquered and all hexes in Finland west of the temporary border will become neutral territory, and all units in those hexes will be eliminated. The Soviet Union will gain control of all hexes in Finland east of the temporary border. If you don't, you won't be able to do it in the future."),a=LeftPanel.appendCheckbox("Have Finland surrender"));let i=new Map;if(n.length>0||e.includes(Countries.sovietUnion)){LeftPanel.appendParagraph("Click on the countries you want to enter the war on your side. If you don't want to do anything, click Pass.");for(let e of n)i.set(e,LeftPanel.appendCheckbox(e.name()))}if(e.includes(Countries.sovietUnion)){const e=Countries.finland.name()+" (will enter the war on your side if you attack the Soviet Union)",n=LeftPanel.appendCheckbox(e);n.disabled=!0,i.set(Countries.finland,n)}let r=new Map;if(e.length>0){LeftPanel.appendParagraph("Click on the neutral countries you want to declare war on. If you don't want to declare war on any neutral country, click Pass.");for(let n of e){let e=n.name();n===Countries.mongolia&&Countries.sovietUnion.partnership()!==Partnership.Axis&&(e+=" (will allow Japan and the Soviet Union to attack each other)"),n===Countries.poland&&this.partnership===Partnership.Axis&&Countries.germany.partnership()===Partnership.Axis&&Countries.sovietUnion.partnership()===Partnership.Neutral&&(e+=" (the Soviet Union will gain control of hexes in eastern Poland, eastern Romania, southeastern Finland and the Baltics)"),r.set(n,LeftPanel.appendCheckbox(n.name()))}}for(let[e,n]of r)n.onchange=()=>{for(let[n,t]of r){if(n===e)continue;const a=r.entries().some((e=>e[1].checked&&!e[1].disabled&&e[0].additionalInvadedCountries(this.partnership).includes(n)));!t.disabled&&t.checked||(t.checked=a),t.disabled=a}const n=i.get(Countries.finland);void 0!==n&&(n.checked=r.get(Countries.sovietUnion)?.checked??!1)};await LeftPanel.waitForNextButtonPressed("To result of war declaration phase");let o=[];t?.checked&&(o.push(...Unit.allAliveUnits().filter((e=>e.owner===Countries.france||e.hex().country===Countries.france))),Countries.france.attemptVichy()),a?.checked&&(o.push(...Unit.allAliveUnits().filter((e=>e.owner===Countries.finland||e.hex().country===Countries.finland))),Countries.finland.surrender());for(let e of o)UnitMarker.get(e).update();for(let[e,n]of i)if(n.checked){if(e===Countries.spain&&Math.random()>=.25){Countries.spain.hasAttemptedActivation=!0;continue}e.joinPartnership(this.partnership)}for(let[e,n]of r)n.checked&&e.joinPartnership(this.opponent().partnership)}}