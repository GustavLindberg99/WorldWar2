import lodash from"https://cdn.jsdelivr.net/npm/lodash@4.17.21/+esm";import{Partnership}from"../../model/partnership.js";import{Countries}from"../../model/countries.js";import{AirUnit,Armor,Carrier,LandUnit,NavalUnit,Submarine,TransportShip}from"../../model/units.js";import{AirNavalCombat,AtomicBombing,Bombing,InstallationBombing,LandCombat,StrategicBombing,UnitCombat}from"../../model/combat.js";import CombatTables from"../../view/combat/combat-tables.js";import HexMarker from"../../view/markers/hex-marker.js";import LeftPanel from"../../view/left-panel.js";import RunCombat from"../../view/combat/run-combat.js";import UnitMarker from"../../view/markers/unit-marker.js";export default class ComputerCombatPhase{#e;#t;#a;constructor(e,t){this.#e=e,this.#t=t,this.#a=[...this.#e.units().flatMap((e=>[e.hex(),...e.hex().adjacentHexes()]))]}async run(){let e,t=new Map;for(let e of this.#e.landUnits())if(!this.#t||e.canDoOverrun())for(let a of e.hex().adjacentLandHexes())a.landUnits().some((e=>e instanceof LandUnit&&e.owner.partnership()!==this.#e))&&(t.has(a)||t.set(a,[]),t.get(a).push(e));for(;null!==(e=this.#n());){HexMarker.scrollToHex(e.combatHex),HexMarker.colorHex(e.combatHex,"purple"),this.#r(e),await LeftPanel.waitForNextButtonPressed("To combat results");const t="Attack is ongoing...";LeftPanel.addNextButtonLock(t);const a=await RunCombat.runCombat(e);if(HexMarker.uncolorHex(e.combatHex),e instanceof UnitCombat)for(let t of e.defenders.map((e=>e.hex())).filter((e=>null!==e)))HexMarker.uncolorHex(t);LeftPanel.clear(),LeftPanel.appendElement(a),LeftPanel.releaseNextButtonLock(t),await LeftPanel.waitForNextButtonPressed("Continue combat phase"),this.#i(e)}LeftPanel.clear(),LeftPanel.appendParagraph("Your opponent is done attacking. Click Next to continue."),await LeftPanel.waitForNextButtonPressed("To movement phase")}#n(){const e=lodash.sample(this.#a);if(void 0===e)return null;const t=[...e.landUnits().filter((e=>e.owner.partnership()!==this.#e))],a=lodash.sample([...e.airUnits().filter((e=>e.owner.partnership()!==this.#e))]),n=[...e.navalUnits().filter((e=>e.owner.partnership()!==this.#e))],r=[e,...e.adjacentHexes()].flatMap((e=>[...e.units()])).filter((e=>e.owner.partnership()===this.#e&&(!this.#t||e instanceof Armor))),i=this.#t?[]:[...e.airUnits().filter((e=>e.owner.partnership()===this.#e))],o=t.length>0&&r.some((e=>e instanceof LandUnit&&e.canAttackInHex(t[0])&&(!this.#t||e.canDoOverrun()))),s=void 0!==a?i.filter((e=>e.canAttackInHex(a))):[],l=n.length>0?r.filter((e=>e instanceof AirUnit||e instanceof NavalUnit)).filter((e=>e.canAttackInHex(n[0]))):[],c=i.filter((t=>null===t.canDoInstallationBombing(e))),m=i.filter((t=>null===t.canDoStrategicBombing(e))),p=i.filter((t=>null===t.canDoAtomicBombing(e)));if(!this.#t){if(p.length>0)return new AtomicBombing(p);if(o&&e.fortified()&&c.length>0)return new InstallationBombing(c);let t=null;if(l.length>0){const a=[...e.navalUnits().filter((e=>l.every((t=>t.canAttackInHex(e)))))];t=new AirNavalCombat(l.filter((e=>(e instanceof AirUnit&&e.canDoKamikaze())===(l[0]instanceof AirUnit&&l[0].canDoKamikaze()))),a)}if(void 0!==a&&s.length>0&&(t=new AirNavalCombat(s,[a])),null!==t){if(t.attackers.every((e=>e instanceof AirUnit&&e.canDoKamikaze())))return t.kamikaze=!0,t;const e=e=>(e.damaged()?t.damageProbability(e):t.eliminationProbability(e))>=Math.random();if(t.attackers.filter(e).reduce(((e,t)=>e+ComputerCombatPhase.#o(t)),0)/t.attackers.length<=t.defenders.filter(e).reduce(((e,t)=>e+ComputerCombatPhase.#o(t)),0)/t.defenders.length)return t}}if(o){const e=r.filter((e=>e.canAttackInHex(t[0])&&(!this.#t||e.canDoOverrun()))),a=t.filter((t=>e.every((e=>e.canAttackInHex(t))))),n=new LandCombat(e,a);if(0===n.attackerEliminationProbability()||n.attackers.some((e=>e.hex().controller()?.partnership()===this.#e.opponent())))return n}if(!this.#t){if(m.length>0)return new StrategicBombing(m);if(c.length>0)return new InstallationBombing(c)}return lodash.pull(this.#a,e),this.#n()}#r(e){if(LeftPanel.clear(),e instanceof AtomicBombing?LeftPanel.appendParagraph("Your opponent is dropping an atomic bomb."):e instanceof InstallationBombing?LeftPanel.appendParagraph("Your opponent is bombing installations."):e instanceof StrategicBombing?LeftPanel.appendParagraph("Your opponent is doing strategic bombing."):LeftPanel.appendParagraph("Your opponent is attacking the following units."),e instanceof Bombing){LeftPanel.appendParagraph("Attackers:");const t=document.createElement("div");for(let a of e.attackers)t.appendChild(UnitMarker.get(a).createCopyImage(!0));LeftPanel.appendElement(t)}if(LeftPanel.appendElement(CombatTables.createCombatTable(e)),e instanceof LandCombat){const t=document.createElement("label"),a=document.createElement("input");a.type="checkbox",0===e.retreatableHexes().length?(a.checked=!0,a.disabled=!0):(a.checked=!e.willingToRetreat,a.onchange=()=>{e.willingToRetreat=!a.checked,this.#r(e)}),t.appendChild(a),t.appendChild(document.createTextNode("Double losses instead of retreating")),LeftPanel.appendElement(t)}}#i(e){if(e instanceof LandCombat){if(0===[...e.combatHex.landUnits()].length){const t=e.attackers.filter((e=>e instanceof LandUnit)).filter((e=>e.isAlive())).sort(((e,t)=>t.strength-e.strength));for(let a of t.slice(0,2))(this.#e!==Partnership.Axis||a.hex().country!==Countries.china||a.hex().landUnits().some((e=>e!==a&&e.owner.partnership()===this.#e)))&&(a instanceof Armor&&(e.combatHex.isDesert()||e.combatHex.isIcecap())||(a.setHex(e.combatHex),UnitMarker.get(a).update(),e.combatHex.setController(a.owner,!1)))}}else if(e instanceof AirNavalCombat){if(0===[...e.combatHex.navalUnits()].length){const t=lodash.shuffle(e.attackers.filter((e=>e instanceof NavalUnit)).filter((e=>e.isAlive())));for(let a of t.slice(0,5))a.setHex(e.combatHex),UnitMarker.get(a).update()}}HexMarker.updateMarkers(e.combatHex)}static#o(e){return e instanceof AirUnit?5:e instanceof Carrier?15:e instanceof TransportShip&&0===e.embarkedUnits().size?1:e instanceof Submarine?5:4}}