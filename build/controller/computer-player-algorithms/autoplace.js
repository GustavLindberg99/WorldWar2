import lodash from"https://cdn.jsdelivr.net/npm/lodash@4.17.21/+esm";import{joinIterables,refreshUI,sortNumber}from"../../utils.js";import{Hex,SupplyLines}from"../../model/mapsheet.js";import{Partnership}from"../../model/partnership.js";import{Countries}from"../../model/countries.js";import{AirUnit,LandUnit,SupplyUnit}from"../../model/units.js";import{date,Month}from"../../model/date.js";import UnitMarker from"../../view/markers/unit-marker.js";import FrontLine from"./front-line.js";var Autoplace;!function(e){e.getLandUnitAutoplacement=async function(e,t,n=null){let r=new Map,i=new Set(t.filter((e=>e instanceof SupplyUnit))),o=new Set(t.filter((e=>!(e instanceof SupplyUnit))));const s=e=>joinIterables(e.landUnits(),(e=>r.entries().filter((t=>t[1]===e)).map((e=>e[0])))(e)),a=e=>r.entries().filter((t=>t[1]===e)).reduce(((e,t)=>e+t[0].strength),e.strength);if(date.current===date(1939,Month.September)&&date.current===Countries.japan.enteredWar&&e===Partnership.Axis){const e=Hex.allCityHexes.find((e=>"Shantou"===e.city)),t=Hex.allCityHexes.find((e=>"Guangzhou"===e.city)),n=t.adjacentLandHexes().find((e=>e.isResourceHex)),a=Hex.allCityHexes.find((e=>"Haikou"===e.city));for(let o of[e,t,a,n]){const e=i.values().find((e=>o.unitCanBePlacedHere(e)));void 0!==e&&!o.landUnits().some((e=>e instanceof SupplyUnit))&&e.canEnterHexWithinStackingLimits(o,!1,s(o))&&(r.set(e,o),i.delete(e))}for(let e of[...Countries.china.cities,...Hex.allResourceHexes.filter((e=>e.country===Countries.china))])if(e.controller()===Countries.japan&&e.landUnits().every((e=>e instanceof SupplyUnit))){const t=o.values().find((t=>e.unitCanBePlacedHere(t)));if(void 0===t)break;r.set(t,e),o.delete(t)}let l=Countries.china.hexes.filter((e=>e.adjacentLandHexes().some((e=>e.country===Countries.japan))));const c=[...r.values().filter((e=>e instanceof Hex)).filter((r=>![e,t,n,a].includes(r)))].sort(((e,t)=>e.distanceFromHexGroup(l)-t.distanceFromHexGroup(l)));for(let e of c){const t=SupplyLines.simplifiedPathBetweenHexes(e,(e=>l.includes(e)),(e=>e.controller()?.partnership()===Partnership.Axis));if(null!==t){for(let e of t)if(s(e).every((e=>e instanceof SupplyUnit))){const t=o.values().find((t=>e.unitCanBePlacedHere(t)));if(void 0===t)break;r.set(t,e),o.delete(t)}l.push(...t)}}}const l=await FrontLine.get(e);let c=new Map;const p=(e,t)=>e.landUnits().find((e=>e.sameType(t)&&a(e)<e.maxStrength()))??r.entries().find((n=>n[1]===e&&n[0].sameType(t)&&a(n[0])<n[0].maxStrength()))?.[0];for(let t of o){let n=c.get(t.owner);void 0===n&&(n=t.owner.hexes.filter((e=>e.controller()===t.owner)),t.owner===Countries.japan&&date.current===date(1939,Month.September)&&n.push(...r.values().filter((e=>e instanceof Hex)).filter((e=>e.country===Countries.china))),n=lodash.shuffle(n).sort(((t,n)=>sortNumber(n,t,(e=>e.landUnits().some((t=>void 0!==p(e,t)))))||sortNumber(n,t,(t=>t.adjacentLandHexes().some((t=>t.controller().partnership()===e.opponent()))&&!t.isColony))||sortNumber(n,t,(t=>t.adjacentLandHexes().some((n=>n.controller().partnership()===e.opponent()&&(null!==n.city||null!==t.city||n.isResourceHex||t.isResourceHex)))))||sortNumber(n,t,(t=>t.adjacentLandHexes().some((t=>t.controller().partnership()===e.opponent()))))||sortNumber(t,n,(e=>e.distanceFromHexGroup(l)-3*Number(null!==e.city)-3*Number(e.isResourceHex)))))),c.set(t.owner,n);const i=n.find((e=>void 0!==p(e,t)))??n.find((e=>t.canEnterHexWithinStackingLimits(e,!1,s(e))));if(void 0!==i){const e=p(i,t);void 0!==e&&a(e)<e.maxStrength()?(r.set(t,e),o.delete(t)):(r.set(t,i),o.delete(t))}}return r},e.placeLandUnits=function(e){for(let[t,n]of e)if(n instanceof Hex)t.setHex(n),UnitMarker.get(t).update();else{if(!n.isAlive())throw new Error("Units must already be placed to have their strength increased");n.strength+=t.strength,UnitMarker.get(n).update()}},e.getAirUnitAutoplacement=async function(e,t,n=null){let r=new Map;const i=e=>joinIterables(e.airUnits(),(e=>r.entries().filter((t=>t[1]===e)).map((e=>e[0])))(e)),o=function(e,t){const n=[...e.currentDelayedUnits()],r=[...e.units()],i=new Map,o=(e,...t)=>{const n=i.get(e)??[];n.push(...t),i.set(e,n)};for(let e of r)e.isAlive()&&o(e.hex(),e,e);const s=Hex.allHexes.filter((t=>t.airbaseCapacity()>=1&&t.controller().partnership()===e&&t.country.partnership()===e)),a=Hex.allHexes.filter((t=>t.isPort()&&t.controller().partnership()===e&&t.country.partnership()===e));for(let e of n){let n;if(e instanceof LandUnit)n=lodash.sample(t.filter((t=>[t,...t.adjacentHexes()].some((t=>t.country===e.owner)))));else{const r=(e instanceof AirUnit?s:a).filter((t=>t.controller()===e.owner&&t.country===e.owner));n=lodash.shuffle(r).sort(((e,n)=>e.distanceFromHexGroup(t)-n.distanceFromHexGroup(t)))[Math.floor(Math.random()**4*r.length)]}void 0!==n&&o(n,e)}return i}(e.opponent(),await FrontLine.get(e));let s=new Map;const a=(t,n,r)=>{const i=s.get([t.x,t.y,n,r].toString());if(void 0!==i)return i;let a;a=n&&r?e=>(o.get(e)??[]).length:n?e=>(o.get(e)??[]).filter((e=>e instanceof AirUnit)).length:r?e=>(o.get(e)??[]).filter((e=>!(e instanceof AirUnit))).length:t=>[...t.landUnits().filter((n=>n.owner.partnership()===e&&!n.outOfSupply()&&SupplyLines.canTraceSupplyLine(t,n.owner,!1)))].length;let l=0;for(let e of Hex.allHexes)e.distanceFromHex(t)>15||(e.distanceFromHex(t)>10?l+=a(e):e.distanceFromHex(t)>5?l+=2*a(e):l+=3*a(e));return s.set([t.x,t.y,n,r].toString(),l),l},l=lodash.shuffle(Hex.allHexes.filter((t=>t.airbaseCapacity()-[...t.basedAirUnits()].length>=1&&t.controller().partnership()===e)));let c=0;for(let e of t.toSorted(((e,t)=>e.movementAllowance-t.movementAllowance))){await refreshUI(),c++,n?.(c/t.length);const o=l.filter((t=>e.canEnterHexWithinStackingLimits(t,!0,i(t))&&t.unitCanBePlacedHere(e)&&SupplyLines.canTraceSupplyLine(t,e.owner))),s=lodash.shuffle(o).sort(((t,n)=>a(n,e.isFighter(),e.isBomber())-a(t,e.isFighter(),e.isBomber())))[0];void 0!==s&&r.set(e,s)}return r},e.getNavalUnitAutoplacement=async function(e,t,n=null){let r=new Map;const i=await FrontLine.get(e),o=e=>joinIterables(e.navalUnits(),(e=>r.entries().filter((t=>t[1]===e)).map((e=>e[0])))(e)),s=t=>[...t.navalUnits().filter((t=>t.owner.partnership()===e))].length,a=Hex.allHexes.filter((t=>t.isPort()&&t.controller().partnership()===e&&!t.navalUnits().some((t=>t.owner.partnership()!==e)))).sort(((e,t)=>Number("Halifax"===t.city)-Number("Halifax"===e.city)||s(t)-s(e)||Number(t.isMajorPort())-Number(e.isMajorPort())||Number(e.isColony)-Number(t.isColony)||e.distanceFromHexGroup(i)-t.distanceFromHexGroup(i)));let l=0;for(let e of t){await refreshUI(),l++,n?.(l/t.length);const i=a.find((t=>e.canEnterHexWithinStackingLimits(t,!0,o(t))&&t.unitCanBePlacedHere(e)&&SupplyLines.canTraceSupplyLine(t,e.owner)));void 0!==i&&r.set(e,i)}return r},e.placeAirNavalUnits=function(e){for(let[t,n]of e)t.setHex(n),t instanceof AirUnit?t.based=!0:t.inPort=!0,UnitMarker.get(t).update()}}(Autoplace||(Autoplace={}));export default Autoplace;