import lodash from"https://cdn.jsdelivr.net/npm/lodash@4.17.21/+esm";import{joinIterables,refreshUI,sortNumber}from"../../../utils.js";import{Hex,SupplyLines}from"../../../model/mapsheet.js";import{Partnership}from"../../../model/partnership.js";import{Countries}from"../../../model/countries.js";import{SupplyUnit}from"../../../model/units.js";import{date,Month}from"../../../model/date.js";import UnitMarker from"../../../view/markers/unit-marker.js";import FrontLine from"../front-line.js";class LandAutoplacer{placements=new Map;#e;#t;#n;#i;#s;constructor(e,t,n,i){this.#e=e,this.#t=n,this.#n=i,this.#i=new Set(t.filter((e=>e instanceof SupplyUnit))),this.#s=new Set(t.filter((e=>!(e instanceof SupplyUnit))))}placeJapaneseUnitsInChina(){const e=Hex.allCityHexes.find((e=>"Shantou"===e.city)),t=Hex.allCityHexes.find((e=>"Guangzhou"===e.city)),n=t.adjacentLandHexes().find((e=>e.isResourceHex)),i=Hex.allCityHexes.find((e=>"Haikou"===e.city));for(let s of[e,t,i,n]){const e=this.#i.values().find((e=>s.unitCanBePlacedHere(e)));void 0!==e&&!s.landUnits().some((e=>e instanceof SupplyUnit))&&e.canEnterHexWithinStackingLimits(s,this.#a(s))&&(this.placements.set(e,s),this.#i.delete(e))}for(let e of[...Countries.china.cities,...Hex.allResourceHexes.filter((e=>e.country===Countries.china))])if(e.controller()===Countries.japan&&e.landUnits().every((e=>e instanceof SupplyUnit))){const t=this.#s.values().find((t=>e.unitCanBePlacedHere(t)));if(void 0===t)break;this.placements.set(t,e),this.#s.delete(t)}let s=Countries.china.hexes.filter((e=>e.adjacentLandHexes().some((e=>e.country===Countries.japan))));const a=[...this.placements.values().filter((e=>e instanceof Hex)).filter((s=>![e,t,n,i].includes(s)))].sort(((e,t)=>e.distanceFromHexGroup(s)-t.distanceFromHexGroup(s)));for(let e of a){const t=SupplyLines.simplifiedPathBetweenHexes(e,(e=>s.includes(e)),(e=>e.controller()?.partnership()===Partnership.Axis));if(null!==t){for(let e of t)if(this.#a(e).every((e=>e instanceof SupplyUnit))){const t=this.#s.values().find((t=>e.unitCanBePlacedHere(t)));if(void 0===t)break;this.placements.set(t,e),this.#s.delete(t)}s.push(...t)}}}async placeNonSupplyUnits(){let e=0;const t=this.#s.size;let n=new Map;for(let i of this.#s){let s;await refreshUI(),e++,this.#n?.(e/t);let a=n.get(i.owner)??this.#r(i.owner,i,[...i.owner.cities,...this.#t]);do{lodash.pull(a,s),s=this.#l(a,i),void 0===s&&(a=this.#r(i.owner,i,i.owner.hexes),s=this.#l(a,i)),n.set(i.owner,a),await refreshUI()}while(void 0!==s&&!SupplyLines.canTraceSupplyLine(s,i.owner));if(void 0!==s){const e=this.#o(s,i);void 0!==e&&this.#p(e)<e.maxStrength()?(this.placements.set(i,e),this.#s.delete(i)):(this.placements.set(i,s),this.#s.delete(i))}}}placeSupplyUnits(){let e=new Map;for(let t of this.#i){const n=e.get(t.owner)??t.owner.hexes.filter((e=>e.unitCanBePlacedHere(t)&&t.canEnterHexWithinStackingLimits(e,this.#a(e))));let i;do{lodash.pull(n,i),i=n.find((e=>e.isMajorPort()))??n.find((e=>e.isPort()))??lodash.sample(n)}while(!(void 0===i||t.canEnterHexWithinStackingLimits(i,this.#a(i))&&SupplyLines.canTraceSupplyLine(i,t.owner,!1)));e.set(t.owner,n),void 0!==i&&(this.placements.set(t,i),this.#i.delete(t))}}#c(e){return this.placements.entries().filter((t=>t[1]===e)).map((e=>e[0]))}#a(e){return joinIterables(e.landUnits(),this.#c(e))}#p(e){return this.placements.entries().filter((t=>t[1]===e)).reduce(((e,t)=>e+t[0].strength),e.strength)}#o(e,t){return e.landUnits().find((e=>e.sameType(t)&&this.#p(e)<e.maxStrength()))??this.placements.entries().find((n=>n[1]===e&&n[0].sameType(t)&&this.#p(n[0])<n[0].maxStrength()))?.[0]}#r(e,t,n){let i=n.filter((e=>e.unitCanBePlacedHere(t)));return e===Countries.japan&&date.current===date(1939,Month.September)&&i.push(...this.placements.values().filter((e=>e instanceof Hex)).filter((e=>e.country===Countries.china))),i=lodash.shuffle(i).sort(((e,t)=>sortNumber(t,e,(e=>e.landUnits().some((t=>void 0!==this.#o(e,t)))))||sortNumber(t,e,(e=>e.adjacentLandHexes().some((e=>e.controller().partnership()===this.#e.opponent()))&&!e.isColony))||sortNumber(t,e,(e=>e.adjacentLandHexes().some((t=>t.controller().partnership()===this.#e.opponent()&&(null!==t.city||null!==e.city||t.isResourceHex||e.isResourceHex)))))||sortNumber(t,e,(e=>e.adjacentLandHexes().some((e=>e.controller().partnership()===this.#e.opponent()))))||sortNumber(e,t,(e=>e.distanceFromHexGroup(this.#t)-3*Number(null!==e.city)-3*Number(e.isResourceHex))))),i}#l(e,t){return e.find((e=>void 0!==this.#o(e,t)))??e.find((e=>t.canEnterHexWithinStackingLimits(e,this.#a(e))))}}var LandAutoplacement;!function(e){e.getLandUnitAutoplacement=async function(e,t,n=null){const i=await FrontLine.get(e),s=new LandAutoplacer(e,t,i,n);return date.current===date(1939,Month.September)&&date.current===Countries.japan.enteredWar&&e===Partnership.Axis&&s.placeJapaneseUnitsInChina(),await s.placeNonSupplyUnits(),s.placeSupplyUnits(),s.placements},e.placeLandUnits=function(e){for(let[t,n]of e)if(n instanceof Hex)t.setHex(n),UnitMarker.get(t).update();else{if(!n.isAlive())throw new Error("Units must already be placed to have their strength increased");n.strength+=t.strength,UnitMarker.get(n).update()}}}(LandAutoplacement||(LandAutoplacement={}));export default LandAutoplacement;