import{refreshUI}from"../../utils.js";import{SupplyLines}from"../../model/mapsheet.js";import{Partnership}from"../../model/partnership.js";import{Countries}from"../../model/countries.js";import{AirUnit,Armor,Convoy,LandUnit,Submarine,SupplyUnit,TransportShip}from"../../model/units.js";import{Phase}from"../../model/phase.js";import HexMarker from"../../view/markers/hex-marker.js";import LeftPanel from"../../view/left-panel.js";import UnitMarker from"../../view/markers/unit-marker.js";export default class ComputerMovementPhase{passedHexes=new Map;#e=new Set;#n;constructor(e){this.#n=e}async run(e){LeftPanel.clear();const n="Your opponent is moving their units...";LeftPanel.appendParagraph(n),LeftPanel.addNextButtonLock(n),await this.#t();let t=null;for(let e of this.#n.units())UnitMarker.get(e).onclick=()=>{Toastify({text:"This unit hasn't moved this turn."}).showToast()};for(let[e,n]of this.passedHexes){if(e instanceof LandUnit)for(let t of n)t.setController(e.owner,!1),HexMarker.updateMarkers(t);else e instanceof AirUnit&&(e.based?e.usedMovementPoints=0:e.usedMovementPoints=n.length-1);const i=UnitMarker.get(e);i.onclick=()=>{if(null!==t){UnitMarker.get(t).deselect();for(let e of this.passedHexes.get(t)??[])HexMarker.uncolorHex(e)}if(e===t)i.deselect(),t=null;else{i.select(),t=e;for(let e of n)HexMarker.colorHex(e,"yellow");HexMarker.colorHex(n[0],"green"),HexMarker.colorHex(n.at(-1),"red")}},i.update()}if(Countries.china.updateController(),LeftPanel.releaseNextButtonLock(n),LeftPanel.clear(),0===this.passedHexes.size?LeftPanel.appendParagraph("Your opponent hasn't moved any units. Click Next to continue."):LeftPanel.appendParagraph("Your opponent has moved their units. Click on a unit to see how it moved."),this.#e.size>0){LeftPanel.appendParagraph("The following units haven't been able to return to their bases and have been eliminated:");const e=document.createElement("div");for(let n of this.#e)e.appendChild(UnitMarker.get(n).createCopyImage());LeftPanel.appendElement(e)}if(await LeftPanel.waitForNextButtonPressed(e),null!==t)for(let e of this.passedHexes.get(t)??[])HexMarker.uncolorHex(e);for(let e of this.passedHexes.keys())UnitMarker.get(e).onclick=null}async#t(){const e=this.#n===Partnership.Allies&&Phase.current===Phase.AxisSecondMovement||this.#n===Partnership.Axis&&Phase.current===Phase.AlliedSecondMovement,n=Phase.current===Phase.AxisSecondMovement||Phase.current===Phase.AlliedSecondMovement;let t=0;const i=e?[]:[...this.#n.landUnits()],s=[...this.#n.airUnits()],a=e?[]:[...this.#n.navalUnits()].sort(((e,n)=>Number(n instanceof Convoy)-Number(e instanceof Convoy)));if(LeftPanel.appendProgressBar((()=>t/(i.length+s.length+a.length))),!e){const e=this.#i();for(let s of i)if(t++,await refreshUI(1e3),!s.hasMoved&&(!s.hasAttacked||s instanceof Armor)&&(!e.has(s.hex())||s.hex().landUnits().some((e=>e!==s))))if(s instanceof SupplyUnit){const[e,n,t]=this.#s(s,(e=>e.landUnits().some((e=>e.owner===s.owner))&&!SupplyLines.canTraceSupplyLine(e,s.owner,!1)));if(null!==e){const i=s.embarkedOn()===e,a=t.at(-1);e.setHex(a),a.isPort()&&a.controller()?.partnership()===this.#n&&(e.inPort=!0),i?e.inPort&&s.disembark():s.embarkOnto(e),this.passedHexes.set(s,n),this.passedHexes.set(e,t),s.hasMoved=!0}}else{const e=this.#a(s)??this.#r(s),[t,i,a]=n||e?.at(-1).adjacentLandHexes().values().flatMap((e=>e.landUnits())).some((e=>e.owner.partnership()!==this.#n))?[null,null,null]:this.#s(s,(e=>[e,...e.adjacentLandHexes()].every((e=>e.controller()?.partnership()===this.#n.opponent()))));null===t||null!==e&&!e.at(-1).adjacentLandHexes().values().flatMap((e=>e.landUnits())).some((e=>e.owner.partnership()!==this.#n))?null!==e&&(s.setHex(e.at(-1)),this.passedHexes.set(s,e),s.hasMoved=!0):(t.setHex(a.at(-1)),s.embarkOnto(t),this.passedHexes.set(s,i),this.passedHexes.set(t,a),s.hasMoved=!0)}}for(let e of s)if(t++,await refreshUI(1e3),n){if(!e.based){const n=this.#o(e);if(null===n)e.die(),this.#e.add(e),UnitMarker.get(e).update();else{e.setHex(n.at(-1));const t=e.carrierBased()?e.hex().navalUnits().find((n=>e.canEmbarkOnto(n)&&0===n.embarkedUnits().size)):void 0;void 0!==t&&e.embarkOnto(t),e.based=!0,this.passedHexes.set(e,n)}}}else if(e.bomberStrength>0&&0===e.fighterStrength){const n=this.#l(e);null!==n&&(e.setHex(n.at(-1)),this.passedHexes.set(e,n))}if(!e){let e=new Map,n=new Set;e:for(let i of a)if(t++,await refreshUI(1e3),!this.passedHexes.has(i)){if(i instanceof TransportShip||i instanceof Convoy||i.remainingSupply()<=1||i.damaged()){let e=null;i instanceof Convoy&&(e=null!==i.destination?i.destination:Countries.unitedStates.partnership()!==Partnership.Neutral?Countries.unitedStates:Countries.canada);const t=this.#p(i,e);if(null!==t){const e=t.at(-1),s=e.isPort()&&e.controller()?.partnership()===this.#n;for(;!i.canEnterHexWithinStackingLimits(e,s,e.navalUnits().filter((e=>!n.has(e))));){const t=e.navalUnits().find((e=>!(e instanceof Convoy||n.has(e))));if(void 0===t)continue e;n.add(t)}i.setHex(e),s&&(i.inPort=!0),this.passedHexes.set(i,t);continue}}if(!(i instanceof TransportShip||i instanceof Convoy||i.damaged())){let n=e.get(i.hex())??null;if(null!==n&&i.canEnterHexWithinStackingLimits(n.at(-1),!1)||(n=this.#h(i)),null!==n){i.setHex(n.at(-1)),e.set(i.hex(),n),this.passedHexes.set(i,n);continue}}if(n.has(i)){const e=i.hex().adjacentSeaHexes().find((e=>i.validateMovement([i.hex(),e],!1)));if(void 0!==e){const n=[i.hex(),e];i.setHex(n.at(-1)),this.passedHexes.set(i,n);continue}}}}}#r(e){const n=SupplyLines.simplifiedPathBetweenHexes(e.hex(),(n=>e.canEnterHexWithinStackingLimits(n)&&(n.adjacentLandHexes().values().flatMap((e=>e.landUnits())).some((e=>e.owner.partnership()!==this.#n))||n.controller()?.partnership()===this.#n.opponent()&&(n.isResourceHex||n.airbaseCapacity()>0)&&!n.units().some((e=>e instanceof LandUnit)))&&!n.isDesert()&&!n.isTallMountain()),e.hex().canUseRail&&e.canUseRail()?e=>e.canUseRail&&e.controller()?.partnership()===this.#n:()=>!0);if(null===n)return null;for(let t=n.length;t>1;t--){const i=n[t-1];if(!e.canEnterHexWithinStackingLimits(i))continue;if(this.#n===Partnership.Axis&&i.country===Countries.china&&!i.adjacentLandHexes().some((e=>e.controller().partnership()===this.#n)))continue;const s=n.slice(0,t);if(e.validateMovement(s,!1))return s;if(e.canUseRail()&&e.validateMovement(s,!0))return e.movingByRail=!0,s}return null}#a(e){if(!e.outOfSupply())return null;return e.hex().adjacentLandHexes().filter((n=>SupplyLines.canTraceSupplyLine(n,e.owner))).flatMap((n=>[[e.hex(),n],...e.hex().adjacentLandHexes().map((t=>[e.hex(),t,n]))])).sort(((e,n)=>Number(n.at(-1).isInLandControlZone(this.#n.opponent()))-Number(e.at(-1).isInLandControlZone(this.#n.opponent())))).find((n=>e.validateMovement(n,!1)))??null}#s(e,n){if(!this.#n.navalUnits().some((n=>e.canEmbarkOnto(n)&&0===n.embarkedUnits().size&&n.hex().distanceFromHex(e.hex())<=e.movementAllowance)))return[null,null,null];const t=SupplyLines.simplifiedPathBetweenHexes(e.hex(),(n=>n.navalUnits().some((n=>e.canEmbarkOnto(n)&&0===n.embarkedUnits().size))),(e=>!e.isInLandControlZone(this.#n.opponent())),!1,!0,e.movementAllowance);if(null===t||!e.validateMovement(t,!1))return[null,null,null];const i=t.at(-1),s=i.navalUnits().find((n=>e.canEmbarkOnto(n)&&0===n.embarkedUnits().size));if(void 0===s)return[null,null,null];const a=SupplyLines.simplifiedPathBetweenHexes(i,(e=>n(e)&&s.canEnterHexWithinStackingLimits(e)),(e=>!e.isInNavalControlZone(this.#n.opponent(),!1)),!0,!1,s.movementAllowance);return null!==a&&s.validateMovement(a,!1)?[s,t,a]:[null,null,null]}#h(e){if(this.#u(e.hex(),e))return null;const n=SupplyLines.simplifiedPathBetweenHexes(e.hex(),(n=>e.canEnterHexWithinStackingLimits(n)&&this.#u(n,e)),(()=>!0),!0,!1,e.movementAllowance);return null!==n&&e.validateMovement(n,!1)?n:null}#u(e,n){return e.adjacentSeaHexes().values().flatMap((e=>e.navalUnits())).some((e=>e.owner.partnership()!==this.#n&&(e instanceof Submarine?n.submarineAttack>0:n.attack>0)))}#p(e,n){if(e.inPort&&(null===n||e.hex().country===n&&!e.hex().isColony))return null;const t=null===n?SupplyLines.supplySourcesUseableBy(e.owner):[n];let i=SupplyLines.simplifiedPathBetweenHexes(e.hex(),(i=>t.includes(i.country)&&i.controller()?.partnership()===this.#n&&i.isPort()&&(null!==n||e.canEnterHexWithinStackingLimits(i,!0))&&(null===n||!i.isColony)&&(n!==Countries.sovietUnion||"Murmansk"===i.city)&&"Vladivostok"!==i.city),(n=>!n.isInNavalControlZone(this.#n.opponent(),e instanceof Submarine)),!0,!1);if(null===i||!e.validateMovement(i.slice(0,2),!1))return null;for(;!e.validateMovement(i,!1);)i.pop();return i}#l(e){const n=SupplyLines.simplifiedPathBetweenHexes(e.hex(),(e=>e.controller()?.partnership()===this.#n.opponent()&&(e.fortified()||e.airbaseCapacity()>0||e.isResourceHex&&!e.resourceHexDestroyed||e.units().some((e=>e instanceof LandUnit))&&e.adjacentLandHexes().values().flatMap((e=>e.landUnits())).some((e=>e.owner.partnership()===this.#n)))||e.navalUnits().some((e=>e.owner.partnership()!==this.#n))),(e=>!e.airUnitsGrounded()),!0,!0,e.movementAllowance/2);return null===n||n.length-1>e.movementAllowance/2||!e.validateMovement(n,!1)?null:n}#o(e){const n=SupplyLines.simplifiedPathBetweenHexes(e.hex(),(n=>n.controller()?.partnership()===this.#n&&(n.airbaseCapacity()>0||e.carrierBased()&&n.navalUnits().some((n=>e.canEmbarkOnto(n)&&0===n.embarkedUnits().size)))&&e.canEnterHexWithinStackingLimits(n,!0)),(e=>!e.airUnitsGrounded()),!0,!0,e.movementAllowance);return null!==n&&e.validateMovement(n,!1)?n:null}#i(){let e=new Set;for(let n of this.#n.landUnits().filter((e=>e.hex().country===Countries.china&&e.hex().airbaseCapacity()>0))){const t=SupplyLines.simplifiedPathBetweenHexes(n.hex(),(e=>e.country!==Countries.china&&e.controller()?.partnership()===n.owner.partnership()||e.landUnits().some((e=>e.owner.partnership()===n.owner.partnership()&&e instanceof SupplyUnit))),(e=>e.landUnits().some((e=>e.owner.partnership()===this.#n))));t?.forEach(e.add,e)}return e}}