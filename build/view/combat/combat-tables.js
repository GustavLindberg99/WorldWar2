import{unionProbability}from"../../utils.js";import{NavalUnit}from"../../model/units.js";import{Phase}from"../../model/phase.js";import{AirNavalCombat,AtomicBombing,Bombing,LandCombat}from"../../model/combat.js";import UnitMarker from"../markers/unit-marker.js";var CombatTables;!function(e){function t(e,t){const a=document.createElement("tr"),n=document.createElement("th");"string"==typeof e?n.textContent=e:n.appendChild(e),a.appendChild(n);for(let e of t){const t=document.createElement("td");if("string"==typeof e)t.textContent=e;else for(let a of e)t.appendChild(a);a.appendChild(t)}return a}e.createCombatTable=function(e){const a=document.createElement("table"),n=document.createElement("tr");if(n.appendChild(document.createElement("td")),a.appendChild(n),e instanceof LandCombat){const o=document.createElement("th");o.textContent="Attackers",n.appendChild(o);const r=document.createElement("th");r.textContent="Defenders",n.appendChild(r),a.appendChild(t("Units",[e.attackers.map((e=>UnitMarker.get(e).createCopyImage(!0))),e.defenders.map((e=>UnitMarker.get(e).createCopyImage(!0)))])),a.appendChild(t("Modified strength",[e.modifiedAttackStrength().toString(),e.modifiedDefenseStrength().toString()])),a.appendChild(t("Loss probability",[`${Math.round(100*e.attackerLossProbability(1))}%`,`${Math.round(100*e.defenderLossProbability(1))}%`]));const i=unionProbability(e.attackerEliminationProbability(),e.attackerLossProbability(e.unmodifiedAttackStrength())),d=t("Elimination probability",[`${Math.round(100*i)}%`,`${Math.round(100*e.defenderEliminationProbability())}%`]);if(a.appendChild(d),i>0){const e=d.querySelector("td");e.style.color="red",e.style.fontWeight="bold"}}else if(e instanceof AirNavalCombat){const o=document.createElement("th");o.textContent="Damage probability",n.appendChild(o);const r=document.createElement("th");r.textContent="Elimination probability",n.appendChild(r);for(let n of[...e.attackers,...e.defenders]){const o=e.damageProbability(n),r=e.eliminationProbability(n),i=n.canTakeDamage()?0:o;a.appendChild(t(UnitMarker.get(n).createCopyImage(!0),[n.canTakeDamage()?`${Math.round(100*o)}%`:"Will be eliminated directly if damaged",`${Math.round(100*unionProbability(r,i))}%`]))}const i=document.createElement("tr"),d=document.createElement("td");d.colSpan=3,e.attackers.some((e=>e instanceof NavalUnit))&&e.retreatableHexes().length>0?d.textContent=`Probability for defender to retreat: ${Math.round(100*e.defenderCancelOrRetreatProbability())}%`:Phase.current!==Phase.AxisInterception&&Phase.current!==Phase.AlliedInterception||(d.textContent=`Probability for defender mission to be canceled: ${Math.round(100*e.defenderCancelOrRetreatProbability())}%`),i.appendChild(d),a.appendChild(i)}else{if(!(e instanceof Bombing))throw new TypeError("Unknown combat type");a.appendChild(t("Success probability",[`${Math.round(100*e.successProbability())}%`])),a.appendChild(t("Probability for attacker to be damaged",[`${Math.round(100*e.attackerDamageProbability())}%`])),e instanceof AtomicBombing&&a.appendChild(t(`Probability for ${e.combatHex.country.name()} to surrender`,[`${Math.round(100*e.surrenderProbability())}%`]))}return a}}(CombatTables||(CombatTables={}));export default CombatTables;