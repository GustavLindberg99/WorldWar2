import lodash from"https://cdn.jsdelivr.net/npm/lodash@4.17.21/+esm";import{refreshUI,wait}from"../../utils.js";import{Hex}from"../../model/mapsheet.js";import{AirUnit,Armor,NavalUnit}from"../../model/units.js";import{Phase}from"../../model/phase.js";import{AirNavalCombat,Bombing,LandCombat,UnitCombat}from"../../model/combat.js";import CombatTables from"./combat-tables.js";import HexMarker from"../markers/hex-marker.js";import LeftPanel from"../left-panel.js";import UnitMarker from"../markers/unit-marker.js";var RunCombat;!function(e){async function t(e,t,n){const a=n.indexOf(e.hex()),o=n.indexOf(t),r=o<a,s=r?n.slice(o,a+1).reverse():n.slice(a,o+1);for(let t of s)await wait(200),e.setHex(t),UnitMarker.get(e).update();r&&e instanceof AirUnit&&e.hex().controller()?.partnership()===e.owner.partnership()&&(e.based=!0)}e.runCombat=async function(e,n=new Map,a=[]){const o=document.createElement("div"),r=e.unmodifiedAttackStrength(),s=e instanceof LandCombat?e.unmodifiedDefenseStrength():0,i=!(e instanceof LandCombat)||e.retreatableHexes().length>0,c=e.inflictDamages();if(await function(e){const t=document.getElementById("explosion");t.style.display="inline";const n=e.centerX()-Hex.hexWidth/2,a=e.centerY()-Hex.hexHeight/2,o=Hex.hexHeight;t.setAttribute("x",n.toString()),t.setAttribute("y",a.toString()),t.setAttribute("width",o.toString()),t.setAttribute("height",o.toString()),t.setAttribute("transform-origin",`${n+o/2} ${a+o/2}`),t.setAttribute("transform","scale(0)"),t.setAttribute("opacity","1");let r=0;const s=4,i=.002,c=performance.now();return new Promise((async e=>{for(;(r=i*(performance.now()-c))<s;)t.setAttribute("transform",`scale(${r})`),t.setAttribute("opacity",(1-(r/s)**4).toString()),r>=1&&e(),await refreshUI();t.style.display="none"}))}(e.combatHex),e instanceof LandCombat&&void 0!==c.attackerLosses){const t=document.createElement("p");if(t.textContent=`Attacker losses: ${c.attackerLosses} strength points`,c.attackerLosses>=r&&(t.textContent+=" (eliminated because losses greater than strength)"),o.appendChild(t),e.isAmphibious&&e.defenders.some((t=>t.hex()===e.combatHex))){const e=document.createElement("p");e.textContent="Amphibious/paradrop attackers eliminated since enemy land units remain in combat hex",o.appendChild(e)}}if(e instanceof LandCombat&&void 0!==c.defenderLosses){const t=document.createElement("p");c.defenderLosses>=s?t.textContent+="Defender eliminated":(t.textContent=`Defender losses: ${c.defenderLosses} strength points`,i?e.willingToRetreat||(t.textContent+=" (doubled because unwilling to retreat)"):t.textContent+=" (doubled because unable to retreat)"),o.appendChild(t)}if(void 0!==c.damagedUnits){const e=document.createElement("p");if(e.textContent="Damaged units:",o.appendChild(e),0===c.damagedUnits.size)e.textContent+=" None";else{const e=document.createElement("p");for(let t of c.damagedUnits){const n=UnitMarker.get(t);n.update();const a=n.createCopyImage(!0);e.appendChild(a)}o.appendChild(e)}}if(void 0!==c.eliminatedUnits){const e=document.createElement("p");if(e.textContent="Eliminated units:",o.appendChild(e),0===c.eliminatedUnits.size)e.textContent+=" None";else{const e=document.createElement("p");for(let t of c.eliminatedUnits){const n=UnitMarker.get(t);n.update();const a=n.createCopyImage(!0);e.appendChild(a)}o.appendChild(e)}}const d=e instanceof AirNavalCombat&&(Phase.current===Phase.AxisInterception||Phase.current===Phase.AlliedInterception),l=e=>{const o=n.get(e),r=a.findLast((t=>t[1]===e))?.[0],s=(n.get(r)??o).at(-1);t(e,s,o)};if(c.success){const r=document.createElement("p");if(o.appendChild(r),d){r.textContent="Defender mission canceled";for(let o of e.defenders){if(o.isAlive()){const e=n.get(o);t(o,e[0],e)}const e=lodash.remove(a,(e=>e[0]===o||e[1]===o));for(let t of e)t[1]!==o&&t[1]&&l(t[1])}}else e instanceof Bombing?r.textContent="Bombing succeeded":e.attackers.some((e=>e instanceof NavalUnit))&&(r.textContent="Defender retreat")}else if(d)for(let t of e.defenders.filter((e=>e.isAlive())))l(t);else if(e instanceof Bombing){const e=document.createElement("p");e.textContent="Bombing failed",o.appendChild(e)}for(let t of[...e.attackers,...e.combatHex.units()])UnitMarker.get(t).update();if(e instanceof UnitCombat)for(let t of e.defenders){UnitMarker.get(t).update();const n=t.hex();n!==e.combatHex&&null!==n&&HexMarker.colorHex(n,"red")}HexMarker.updateMarkers(e.combatHex);for(let t of e.attackers.filter((e=>e.isAlive())))t.hasAttacked=!0,e instanceof LandCombat&&(Phase.current===Phase.AxisOverrun||Phase.current===Phase.AlliedOverrun)&&t instanceof Armor&&(e.defenders.some((e=>!e.isAlive()))||e.unmodifiedDefenseStrength()<s)&&(t.hasDoneSuccessfulOverrun=!0),UnitMarker.get(t).update();return o},e.runInterceptions=async function(t,n,a){for(;t.length>n;){const[n,o]=t.pop(),r=new AirNavalCombat([n],[o]);HexMarker.scrollToHex(r.combatHex),HexMarker.colorHex(r.combatHex,"purple"),LeftPanel.clear(),LeftPanel.appendElement(CombatTables.createCombatTable(r)),await LeftPanel.waitForNextButtonPressed("To combat results");const s="Attack is ongoing...";LeftPanel.addNextButtonLock(s);const i=await e.runCombat(r,a,t);HexMarker.uncolorHex(r.combatHex),LeftPanel.clear(),LeftPanel.appendElement(i),LeftPanel.releaseNextButtonLock(s),await LeftPanel.waitForNextButtonPressed(t.length>0?"To next interception":"To amphibious and paradrop phase")}}}(RunCombat||(RunCombat={}));export default RunCombat;