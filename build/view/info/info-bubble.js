import{wait}from"../../utils.js";import{Partnership}from"../../model/partnership.js";import{Countries}from"../../model/countries.js";import{AirUnit,Convoy,Destroyer,LandUnit,NavalUnit,TransportShip,Unit}from"../../model/units.js";import{date,dateToString}from"../../model/date.js";import{Phase}from"../../model/phase.js";import HexMarker from"../markers/hex-marker.js";import MoveUnitListener from"../markers/move-unit-listener.js";import UnitMarker from"../markers/unit-marker.js";var InfoBubble;!function(e){let n=null,t=new Map;function o(e,t){return n??=document.createElementNS("http://www.w3.org/2000/svg","rect"),n.setAttribute("x",e.centerX().toString()),n.setAttribute("y",e.centerY().toString()),n.setAttribute("width","1"),n.setAttribute("height","1"),n.setAttribute("fill","none"),n.setAttribute("stroke","none"),document.getElementById("installations").appendChild(n),tippy(n,t)}function i(e){return`<a href="javascript:void(0)" role="button" class="countryInfoLink">${e.name()}</a>`}function r(){for(let e of document.querySelectorAll("a.countryInfoLink")){const n=Countries.fromName(e.textContent);e.onclick=()=>s(n)}}function s(e){const n=e.partnership()===Partnership.Allies&&Phase.current===Phase.AlliedSecondMovement||e.partnership()===Partnership.Axis&&Phase.current===Phase.AxisSecondMovement;xdialog.open({title:"Country Information: "+e.name(),body:`\n                <div class="infoBubble">\n                    <div class="box">\n                        <h3>Status</h3>\n                        <p>Partnership: ${e.partnership()?.name??"Neutral"}</p>\n                        <p>Conquered: ${e.conquered()?"Yes":"No"}</p>\n                        <p>Entered war: ${null===e.enteredWar?"Never":dateToString(e.enteredWar)}</p>\n                    </div>\n                    <div class="box">\n                        <h3>Resources</h3>\n                        <p>Money: $${e.money.toLocaleString()}B</p>\n                        <p>Icome: $${e.income().toLocaleString()}B/month</p>\n                        <p>Rail capacity: ${e.railCapacity()}${n?" ("+[...e.landUnits().filter((e=>e.movingByRail))].length+" used)":""}</p>\n                        <p>${e.hasAtomicBomb()?"Atomic bomb":"Has atomic bomb"}: ${e.hasAtomicBomb()?e.hasUsedAtomicBombThisTurn?"Already used this turn":"Ready for use":"No"}</p>\n                    </div>\n                    <div class="box">\n                        <h3>Units</h3>\n                        <p>Units on the map:</p>\n                        <p id="Country.unitsOnMap"></p>\n                        <p>${e.partnership()===Partnership.Neutral?"Units arriving when this country enters the war":"Units available for build"}:</p>\n                        <p id="Country.availableUnits"></p>\n                    </div>\n                </div>`,buttons:null,style:"width: 400px"});const t=document.getElementById("Country.unitsOnMap"),o=Unit.groupByType(e.units());if(0===o.size)t.textContent="None";else for(let[e,n]of o)t.appendChild(UnitMarker.get(e).createCopyImage(!0)),n>1&&t.appendChild(document.createTextNode("(x"+n+") "));const i=document.getElementById("Country.availableUnits"),r=Unit.groupByType(e.availableUnits);if(0===r.size)i.textContent="None";else for(let[e,n]of r)i.appendChild(UnitMarker.get(e).createCopyImage(!0)),n>1&&i.appendChild(document.createTextNode("(x"+n+") "));for(let[n,t]of e.delayedUnits.entries()){const o=Unit.groupByType(n===date.current?[...t,...e.units()]:t);if(0===o.size)continue;const r=i.parentElement,s=document.createElement("p");s.textContent=`Bought units arriving in ${dateToString(n)}:`,r.appendChild(s);const a=document.createElement("p");for(let[e,n]of o)a.appendChild(UnitMarker.get(e).createCopyImage(!0)),n>1&&a.appendChild(document.createTextNode("(x"+n+") "));r.appendChild(a)}}e.hexTippy=o,e.showHexInfo=function(e){let n=[];e.destroyedByAtomicBomb?n.push("Destroyed by atomic bomb"):(null!==e.city&&n.push(`City (${e.city})`),e.isMajorPort()&&n.push("Major port"+(e.installationsDestroyed?" (destroyed)":"")),e.isResourceHex&&n.push("Resource hex"+(e.resourceHexDestroyed?" (destroyed)":"")),e.fortified()?n.push("Fortification"):e.fortUnderConstruction()&&n.push(`Fortification (under construction, finished in ${3-e.monthsUntilFortFinished()} months)`),e.hasAirfield()?n.push("Airfield"):e.airfieldUnderConstruction()&&n.push(`Airfield (under construction, finished in ${3-e.monthsUntilAirfieldFinished()} months)`)),o(e,{content:`\n            <div class="infoBubble">\n                <div class="box">\n                    <h3>Terrain</h3>\n                    <p>Terrain: ${e.terrain}</p>\n                    <p>Weather zone: ${e.weatherZone}</p>\n                    <p>Hex coordinates: ${e.x}, ${e.y}</p>\n                </div>\n                <div class="box">\n                    <h3>Country</h3>\n                    <p>Country: ${null===e.country?"N/A":i(e.country)}${e.isColony?" (colony)":""}</p>\n                    <p>Controller: ${null===e.controller()?"N/A":i(e.controller())}</p>\n                </div>\n                <div class="box">\n                    <h3>Installations and Capacity</h3>\n                    <p>Installations: ${n.join(", ")||"None"}</p>\n                    <p>Airbase capacity: ${e.installationsDestroyed?"destroyed":`${e.airbaseCapacity()} air units (${[...e.basedAirUnits()].length} used)`}</p>\n                </div>\n                <div class="box">\n                    <h3>Units</h3>\n                    <p id="Hex.units"></p>\n                </div>\n            </div>`});const t=document.getElementById("Hex.units");if(0===[...e.units()].length)t.textContent="None";else for(let n of e.units())t.appendChild(UnitMarker.get(n).createCopyImage());r()},e.clickableCountryInfoLink=function(n,t=null){const o=null===t?document.createElement("a"):document.createElementNS(t,"a");return o.textContent=n.name(),o.setAttribute("href","javascript:void(0)"),o.setAttribute("role","button"),o.onclick=t=>{e.showCountryInfo(n),t.stopPropagation()},o},e.showCountryInfo=s,e.onshowembarkedunit=null,e.showUnitInfo=function(n,o){const s=null===n.embarkedOn()?"InfoBubble.unitImage":"InfoBubble.embarkedUnitImage";let a=`\n            <div class="infoBubble">\n                <div id="${s}"></div>\n                <div class="box">\n                    <h3>General</h3>\n                    <p>Type: ${n.type()}</p>\n                    <p>Owner: ${i(n.owner)}</p>\n                    <p>Movement allowance: ${n.movementAllowance}`;n instanceof AirUnit&&(a+=` (${n.usedMovementPoints} used)`),a+="</p>",n instanceof NavalUnit?n.outOfSupply()?a+='<p>Out of supply: <b style="color:red">Yes</b></p>':a+=`<p>Remaining supply: ${n.remainingSupply()} months</p>`:a+=`<p>Out of supply: ${n.outOfSupply()?'<b style="color:red">Yes</b>':"No"}</p>`,a+="</div>",n instanceof LandUnit?a+=`\n                <div class="box">\n                    <h3>Land unit</h3>\n                    <p>Strength: ${n.strength}</p>\n                    <p>Modified attack strength: ${n.modifiedLandAttack()}</p>\n                    <p>Modified defense strength: ${n.modifiedDefense()}</p>\n                </div>`:n instanceof AirUnit?a+=`\n                <div class="box">\n                    <h3>Air unit</h3>\n                    <p>Model: ${n.model}</p>\n                    <p>Fighter strength: ${n.fighterStrength}</p>\n                    <p>Bomber strength: ${n.bomberStrength}</p>\n                    <p>Defense strength: ${n.defense}</p>\n                </div>`:n instanceof NavalUnit&&(a+='\n                <div class="box">\n                    <h3>Naval unit</h3>',n instanceof Destroyer?a+=`<p>Class: ${n.name}</p>`:n instanceof Convoy||n instanceof TransportShip||(a+=`<p>Name: ${n.name}</p>`),n instanceof Convoy&&(a+=`<p>Transported money: $${n.money}B`,null!==n.destination&&(a+=` to ${n.destination.name()}`),a+="</p>"),a+=`\n                <p>Attack strength against surface naval units: ${n.attack}</p>\n                <p>Attack strength against submarines: ${n.submarineAttack}</p>\n                <p>Defense strength: ${n.defense}</p>\n            </div>`);const l=UnitMarker.get(n).infoMarkers();if(l.size>0){a+='<div class="box"><h3>More info</h3>';for(let[e,n]of l)a+=`<p><img src="${e.getAttribute("href")}" class="inline"/> ${n}</p>`,"Embarked units:"===n&&(a+='<div id="InfoBubble.embarkedUnits" style="margin-top:4px"></div>');a+="</div>"}const p=n.owner.delayedUnits.entries().find((e=>e[1].has(n)))?.[0];void 0!==p?a+=`\n                <div class="box">\n                    <h3>Delay</h3>\n                    <p>Date this unit arrives: ${dateToString(p)}</p>\n                </div>`:n.owner.availableUnits.has(n)&&(a+=`\n                <div class="box">\n                    <h3>Price and delay</h3>\n                    <p>Price: $${n.price().toLocaleString()}B (${n.owner.name()} has $${n.owner.money.toLocaleString()}B)</p>\n                    <p>Delay between buying the unit and it arriving: ${n.delay()} months</p>\n                </div>`),a+="</div>";for(let[e,o]of new Map(t))n.embarkedOn()!==o&&(e.destroy(),t.delete(e));if(null!==a){const i=tippy(o,{content:a});r();const l=UnitMarker.get(n).createCopyImage(!1,!1,"4em");l.style.display="block";const p=document.getElementById(s);p?.appendChild(l);const d=n.hex();if(o instanceof SVGSVGElement&&null!==d){const e=document.createElement("button");e.textContent="Show unit on the map",e.onclick=async()=>{HexMarker.scrollToHex(d);for(let e=0;e<3;e++)HexMarker.colorHex(d,"purple"),await wait(500),HexMarker.uncolorHex(d),await wait(500)},p?.appendChild(e)}for(let t of n.embarkedUnits()){const n=UnitMarker.get(t).createCopyImage(!0,!0);document.getElementById("InfoBubble.embarkedUnits")?.appendChild(n),e.onshowembarkedunit?.(t,n)}const u=MoveUnitListener.activeListener();if(null!==u){i.popper.addEventListener("mouseover",(()=>u.onunitbubblemouseover?.())),i.popper.addEventListener("mouseout",(()=>u.onunitbubblemouseout?.()));const e=u.onunitbubblecreate?.(n,i)??null;if(null===e)return void i.destroy();i.setContent(e)}t.set(i,n)}},e.closeOtherUnitInfoBubbles=function(e){for(let[n,o]of new Map(t))e!==o&&e?.embarkedOn()!==o&&(n.destroy(),t.delete(n))}}(InfoBubble||(InfoBubble={}));export default InfoBubble;